version: 2.1

parameters:
  team:
    type: string
    default: 'ankit'
  networking:
    type: boolean
    default: false
  eks:
    type: boolean
    default: false
  app-a:
    type: boolean
    default: false

jobs:
  plan:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      environment:
        type: string
      stack:
        type: string
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd week2/stacks/<< parameters.stack >>
            terraform init -input=false -backend-config="key=<< pipeline.parameters.team >>/<< parameters.environment >>/<< parameters.stack >>"
            terraform plan \
            -var 'team_name=<< pipeline.parameters.team >>' \
            -var-file=../../environments/<< parameters.stack >>/<< parameters.environment >>.tfvars \
            -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      stack:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd week2/stacks/<< parameters.stack >>
            terraform apply -auto-approve tfapply

workflows:
  version: 2
  networking:
    when: << pipeline.parameters.networking >>
    jobs:
      - plan:
          name: networking-plan-stg
          environment: 'stg'
          stack: 'networking'
      - networking-approve-stg:
          type: approval
          requires:
            - networking-plan-stg
      - apply:
          name: networking-apply-stg
          stack: 'networking'
          requires:
            - networking-approve-stg
      - plan:
          name: networking-plan-prod
          environment: 'prod'
          stack: 'networking'
          requires:
            - networking-apply-stg
      - networking-approve-prod:
          type: approval
          requires:
            - networking-plan-prod
      - apply:
          name: apply-prod
          stack: 'networking'
          requires:
            - networking-approve-prod
  eks:
    when: << pipeline.parameters.eks >>
    jobs:
      - plan:
          name: eks-plan-stg
          environment: 'stg'
          stack: 'eks'
      - apply:
          name: eks-apply-stg
          stack: 'eks'
          requires:
            - eks-plan-stg
      - plan:
          name: eks-plan-prod
          environment: 'prod'
          stack: 'eks'
          requires:
            - eks-apply-stg
      - apply:
          name: eks-apply-prod
          stack: 'eks'
          requires:
            - eks-approve-prod
