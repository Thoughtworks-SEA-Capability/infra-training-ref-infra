version: 2

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    environment:
      TF_VAR_team_name: ankit
      TF_VAR_environment: stg
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            pushd week2/stacks/networking
            terraform init -input=false -backend-config=-backend-config="key=${TF_VAR_team_name}/${TF_VAR_environmnet}/networking"
            terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  # plan-destroy:
  #   docker:
  #     - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: terraform create destroy plan
  #         command: |
  #           terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - .

  # destroy:
  #   docker:
  #     - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: terraform destroy
  #         command: |
  #           terraform apply -auto-approve tfdestroy
workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply
      # - plan-destroy:
      #     requires:
      #       - apply
      # - hold-destroy:
      #     type: approval
      #     requires:
      #       - plan-destroy
      # - destroy:
      #     requires:
      #       - hold-destroy