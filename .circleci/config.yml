version: 2.1

parameters:
  team:
    type: string
    default: 'ankit'

jobs:
  plan:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      environment:
        type: string
      stack:
        type: string
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd week2/stacks/<< parameters.stack >>
            terraform init -input=false -backend-config="key=<< pipeline.parameters.team >>/<< parameters.environment >>/<< parameters.stack >>"
            terraform plan \
            -var 'team_name=<< pipeline.parameters.team >>' \
            -var-file=../../environments/<< parameters.stack >>/<< parameters.environment >>.tfvars \
            -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd week2/stacks/networking
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  # plan-destroy:
  #   docker:
  #     - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: terraform create destroy plan
  #         command: |
  #           terraform plan -destroy -out tfdestroy -var-file terraform.tfvars
  #     - persist_to_workspace:
  #         root: .
  #         paths:
  #           - .

  # destroy:
  #   docker:
  #     - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     - run:
  #         name: terraform destroy
  #         command: |
  #           terraform apply -auto-approve tfdestroy
workflows:
  version: 2
  networking:
    jobs:
      - plan:
          name: plan-stg
          environment: 'stg'
          stack: 'networking'
      - approve-stg:
          type: approval
          requires:
            - plan-stg
      - apply:
          name: apply-stg
          requires:
            - approve-stg
      - plan:
          name: plan-prod
          environment: 'prod'
          stack: 'networking'
          requires:
            - apply-stg
      - approve-prod:
          type: approval
          requires:
            - plan-prod
      - apply:
          name: apply-prod
          requires:
            - approve-prod
      # - plan-destroy:
      #     requires:
      #       - apply
      # - hold-destroy:
      #     type: approval
      #     requires:
      #       - plan-destroy
      # - destroy:
      #     requires:
      #       - hold-destroy
